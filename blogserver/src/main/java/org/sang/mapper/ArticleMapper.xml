<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sang.mapper.ArticleMapper">


    <resultMap id="selectBlogMap" type="org.sang.bean.Article">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="comment_size" jdbcType="INTEGER" property="commentSize" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="read_size" jdbcType="INTEGER" property="readSize" />
        <result column="summary" jdbcType="VARCHAR" property="summary" />
        <result column="tags" jdbcType="VARCHAR" property="tags" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="vote_size" jdbcType="INTEGER" property="voteSize" />
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
        <result column="html_content" jdbcType="LONGVARCHAR" property="htmlContent" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="state" jdbcType="TINYINT" property="state" />
        <result column="source_type" jdbcType="TINYINT" property="sourceType" />
        <association property="catalog" javaType="org.sang.bean.Catalog">
            <id column="cid" jdbcType="INTEGER" property="id" />
            <result column="cname" jdbcType="VARCHAR" property="name" />
            <result column="user_id" jdbcType="VARCHAR" property="userId" />
        </association>
        <association property="user" javaType="org.sang.bean.User">
            <result column="uid" jdbcType="INTEGER" property="id" />
            <result column="username" jdbcType="VARCHAR" property="username" />
            <result column="password" jdbcType="VARCHAR" property="password" />
            <result column="email" jdbcType="VARCHAR" property="email" />
            <result column="name" jdbcType="VARCHAR" property="name" />
            <result column="avatar" jdbcType="VARCHAR" property="avatar" />
            <result column="tag" jdbcType="VARCHAR" property="tag" />
            <result column="description" jdbcType="VARCHAR" property="description" />
            <result column="phone" jdbcType="VARCHAR" property="phone" />
            <result column="openid" jdbcType="VARCHAR" property="openid" />
            <result column="created" jdbcType="TIMESTAMP" property="created" />
            <result column="score" jdbcType="VARCHAR" property="score" />
        </association>
    </resultMap>
    <insert id="addNewArticle" parameterType="org.sang.bean.Article" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO blog SET title=#{title},html_content=#{htmlContent},content=#{content},
            summary=#{summary},comment_size=#{commentSize},read_size=#{readSize},
            tags=#{tags},vote_size=#{voteSize},
            catalog_id=#{catalog.id},user_id=#{user.id},create_time=#{createTime},
            update_time=#{updateTime},state=#{state},source_type=#{sourceType}
    </insert>
    <update id="pvIncrement" parameterType="Integer">
        UPDATE blog set read_size=read_size+1 WHERE id=#{aid}
    </update>
    <update id="updateArticle" parameterType="org.sang.bean.Article">
        UPDATE blog SET
        title=#{title},content=#{content},html_content=#{htmlContent},summary=#{summary},catalog_id=#{catalog.id},update_time=#{updateTime}
        WHERE id=#{id}
    </update>
    <select id="getArticleByState" resultMap="selectBlogMap">
        select blog.id,blog.title,blog.summary,blog.create_time,blog.vote_size,blog.tags,blog.create_time,
          blog.read_size,blog.html_content,state,source_type,user.id uid,user.username,user.email,user.name,user.avatar,
        user.tag,user.description,catalog.id cid,catalog.name cname,
        catalog.user_id from blog inner join catalog on blog.catalog_id = catalog.id
        inner join user on blog.user_id = user.id
        where

        <if test="keywords!=null">
             title LIKE concat('%',#{keywords},'%')
        </if>
        <if test="state!=-1">
          and state=#{state}
        </if>
        ORDER BY blog.create_time DESC
        <if test="start !=null and count!=null">
        limit #{start},#{count};
        </if>
    </select>
    <select id="getArticleByStateByAdmin" resultType="org.sang.bean.Article">
        SELECT a.id,a.`title`,a.`editTime`,a.`pageView`,a.`state`,u.`nickname`,c.`cateName`,a.uid FROM article a,user
        u,category c WHERE a.`cid`=c.`id` AND a.`user_id`=u.`id` and a.state=1
        <if test="keywords!=null">
            AND title LIKE concat('%',#{keywords},'%')
        </if>
        ORDER BY a.editTime DESC limit #{start},#{count};
    </select>
    <select id="getArticleCountByState" resultType="int">
        SELECT count(*) FROM blog
        <where>
            <if test="state!=-1">
                AND state=#{state}
            </if>
            <if test="keywords!=null">
                AND title LIKE concat('%',#{keywords},'%')
            </if>
        </where>
    </select>
    <update id="updateArticleState">
        UPDATE blog SET state=#{state} WHERE id IN
        <foreach collection="aids" item="aid" separator="," open="(" close=")">
            #{aid}
        </foreach>
    </update>

    <delete id="deleteArticleById">
        DELETE FROM blog WHERE id IN
        <foreach collection="aids" item="aid" open="(" close=")" separator=",">
            #{aid}
        </foreach>
    </delete>
    <select id="getArticleById" parameterType="Integer" resultMap="selectBlogMap">
        select blog.*,user.id uid,user.username,blog.vote_size,blog.comment_size,
        user.email,user.name,user.avatar,
    user.tag,user.description,catalog.id cid,catalog.name cname,
    catalog.user_id from blog inner join catalog on blog.catalog_id = catalog.id
    inner join user on blog.user_id = user.id
    where blog.id = #{id}
    </select>


    <insert id="pvStatisticsPerDay">
        INSERT INTO pv(countDate,pv,uid) SELECT CURRENT_DATE(),totalPv-pv,t.`uid` FROM pvview p,totalpvview t WHERE p.`uid`=t.`uid`
    </insert>

    <select id="getCategories" resultType="String" parameterType="Integer">
        SELECT countDate from pv WHERE uid=#{uid} ORDER by countDate limit 7
    </select>
    <select parameterType="Integer" id="getDataStatistics" resultType="int">
        SELECT pv from pv WHERE uid=#{uid} ORDER by countDate limit 7
    </select>
</mapper>